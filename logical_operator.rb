# 論理演算子を使用した式では、「最後に評価したオペランドの値」を返します。
# && 演算子と || 演算子の違いは右辺が実行されるかどうかです。

# || 演算子は
# 左辺が true の場合、右辺は実行しません。
# 左辺が false の場合は、右辺は実行します。

# && 演算子は
# 左辺が true の場合、右辺は実行します。
# 左辺が false の場合は、右辺は実行しません。

a1 = [1,2,3]
a2 = [4,2,3]

p a1 && a2
p a1 || a2
p a1 & a2
p a1 | a2

# --------------------------

&, &&, |, ||演算子それぞれの動きの違いについて問題です。

&と&&の違いについて
&は共通する要素を出力する

a = [1, 2, 3]
b = [1, 3, 5]
a & b #=> [1, 3]
&&は a と b がどちらも真のとき、最後に評価された b を出力する

a && b #=> [1, 3, 5]
a = nilの場合右辺の処理は行われない

a && b #=> nil
|と||の違いについて
|は重複している要素をまとめて出力する

a = [1, 2, 3]
b = [1, 3, 5]
a | b #=> [1, 2, 3, 5]
||は a と b がどちらかが真のとき、最初に評価された a を出力する

a || b #=> [1, 2, 3]
a = nilの場合右辺の処理が行われる

a || b #=> [1, 3, 5]



a = [1, 2, 5, 7, 8]
b = [1, 3, 6, 7, 9]
c =  nil || a & b | a && a | b
p c